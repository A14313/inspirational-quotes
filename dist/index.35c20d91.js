const e=document.querySelector("#quote"),t=document.querySelector("#author"),o=document.querySelector("#quoteID"),n=document.querySelector("#quoteCount"),r=document.querySelector("#newQuoteBtn"),c=(document.querySelector("#copyBtn"),document.querySelector("#hintContainer")),s=document.querySelector("#closeBtn"),u=document.querySelector("#showHintBtn"),a=e=>new Promise(((t,o)=>{if(e){let o=Math.floor(Math.random()*e.length);const n=e[o].author,r=e[o].text;t(null===n?{quote:r,author:"Unknown Author",number:o,quotesCount:e.length}:{quote:r,author:n,number:o,quotesCount:e.length})}else o("Cannot fetch data")})),l=async r=>{try{return e.textContent=r.quote,t.textContent=r.author,o.textContent=r.number,n.textContent=r.quotesCount,r}catch(e){console.log(e)}},h=()=>{(async()=>{try{const e="https://type.fit/api/quotes",t=await fetch(e);return await t.json()}catch(e){console.log(e)}})().then(a).then(l)};h(),r.addEventListener("click",h),window.addEventListener("keydown",(e=>{switch(e.code){case"NumpadEnter":case"Enter":h();break;case"KeyC":console.log("Key C");break;default:return"There's no shortcut for that key"}})),u.addEventListener("click",(()=>{c.classList.add("show"),u.classList.remove("show")}));(async()=>{try{await new Promise(((e,t)=>{window.innerWidth>=320?setTimeout((()=>{c.classList.add("show"),e()}),2e3):t("The current screen size is less than 320px")})),s.addEventListener("click",(()=>{c.classList.remove("show"),u.classList.add("show")}))}catch(e){console.log(e)}})();
//# sourceMappingURL=index.35c20d91.js.map
