const e=document.querySelector("#quote"),t=document.querySelector("#author"),n=document.querySelector("#quoteID"),o=document.querySelector("#quoteCount"),s=document.querySelector("#newQuoteBtn"),a=document.querySelector("#copyBtn"),c=document.querySelector("#speakBtn"),r=document.querySelector("#hintContainer"),i=document.querySelector("#closeBtn"),d=document.querySelector("#showHintBtn"),u=document.querySelector("#copyNotifDiv");s.addEventListener("mousedown",(e=>{e.preventDefault()})),a.addEventListener("mousedown",(e=>{e.preventDefault()})),c.addEventListener("mousedown",(e=>{e.preventDefault()}));const l=e=>{const t=Math.floor(Math.random()*e.length);return null===e[t].author?{quote:e[t].text,author:"Unknown Author",id:t,quotesCount:e.length}:{quote:e[t].text,author:e[t].author,id:t,quotesCount:e.length}},h=a=>{e.textContent=a.quote,t.textContent=a.author,n.textContent=a.id,o.textContent=a.quotesCount,s.textContent="Get new",s.classList.remove("loading-state")},m=e=>{console.log(e)},p=()=>{s.textContent="Loading...",s.classList.add("loading-state");fetch("https://type.fit/api/quotes").then((e=>e.json())).then(l).then(h).catch(m)};p();const w=()=>{navigator.clipboard.writeText(`${e.textContent}\n\n--${t.textContent}\n\nCopied from Inspirational Quotes Web app\nlink: https://a14313.github.io/inspirational-quotes/dist/`),u.classList.add("show"),setTimeout((()=>{u.classList.remove("show")}),2e3)};a.addEventListener("click",w),s.addEventListener("click",p);const y=()=>{let n=`${e.textContent}`,o=`by ${t.textContent}`,a=new SpeechSynthesisUtterance(n),r=new SpeechSynthesisUtterance(o);a.pitch=1,a.rate=.8,r.pitch=1,r.rate=.8,c.classList.add("active"),c.disabled=!0,s.disabled=!0,speechSynthesis.speak(a),a.addEventListener("end",(()=>{setTimeout((()=>{speechSynthesis.speak(r),c.classList.remove("active"),s.disabled=!1,c.disabled=!1}),500)}))};c.addEventListener("click",y),window.addEventListener("keydown",(e=>{switch(e.code){case"NumpadEnter":case"Enter":p();break;case"KeyC":w();break;case"KeyS":y();break;default:return"No shortcut for that key"}})),d.addEventListener("click",(()=>{r.classList.add("show"),d.classList.remove("show")}));(async()=>{try{await new Promise(((e,t)=>{window.innerWidth>=320?setTimeout((()=>{r.classList.add("show"),e()}),2e3):t("The current screen size is less than 320px")})),i.addEventListener("click",(()=>{r.classList.remove("show"),d.classList.add("show")}))}catch(e){console.log(e)}})();
//# sourceMappingURL=index.d94aa279.js.map
