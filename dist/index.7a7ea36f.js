const e=document.querySelector("#quote"),t=document.querySelector("#author"),n=document.querySelector("#quoteID"),o=document.querySelector("#quoteCount"),s=document.querySelector("#newQuoteBtn"),a=document.querySelector("#copyBtn"),i=document.querySelector("#speakBtn"),d=document.querySelector("#hintContainer"),c=document.querySelector("#closeBtn"),r=document.querySelector("#showHintBtn"),u=document.querySelector("#copyNotifDiv");[s,a,i].forEach((e=>{e.addEventListener("mousedown",(e=>{e.preventDefault()}))}));const l=e=>{switch(e.code){case"NumpadEnter":case"Enter":m();break;case"KeyC":p();break;case"KeyS":v();break;default:return"No shortcut for that key"}};window.addEventListener("keydown",l);const h=e=>{const t=Math.floor(Math.random()*e.length);return null===e[t].author?{quote:e[t].text,author:"Unknown Author",id:t,quotesCount:e.length}:{quote:e[t].text,author:e[t].author,id:t,quotesCount:e.length}},w=a=>{e.textContent=a.quote,t.textContent=a.author,n.textContent=a.id,o.textContent=a.quotesCount,s.classList.remove("loading-state"),i.disabled=!1,window.addEventListener("keydown",l)},y=e=>{console.log(e)},m=()=>{s.classList.add("loading-state"),i.disabled=!0,window.removeEventListener("keydown",l);fetch("https://type.fit/api/quotes").then((e=>e.json())).then(h).then(w).catch(y)};m();const p=()=>{navigator.clipboard.writeText(`${e.textContent}\n\n--${t.textContent}\n\nCopied from Inspirational Quotes Web app\nlink: https://a14313.github.io/inspirational-quotes/dist/`),u.classList.add("show"),setTimeout((()=>{u.classList.remove("show")}),2e3)},v=()=>{let n=`${e.textContent}`,o=`by ${t.textContent}`,a=new SpeechSynthesisUtterance(n),d=new SpeechSynthesisUtterance(o);a.pitch=1,a.rate=.8,d.pitch=1,d.rate=.8,i.classList.add("active"),i.disabled=!0,s.disabled=!0,window.removeEventListener("keydown",l),speechSynthesis.speak(a),a.addEventListener("end",(()=>{setTimeout((()=>{speechSynthesis.speak(d),i.classList.remove("active"),s.disabled=!1,i.disabled=!1,window.addEventListener("keydown",l)}),500)}))};a.addEventListener("click",p),i.addEventListener("click",v),s.addEventListener("click",m),r.addEventListener("click",(()=>{d.classList.add("show"),r.classList.remove("show")}));(async()=>{try{await new Promise(((e,t)=>{window.innerWidth>=320?setTimeout((()=>{d.classList.add("show"),e()}),2e3):t("The current screen size is less than 320px")})),c.addEventListener("click",(()=>{d.classList.remove("show"),r.classList.add("show")}))}catch(e){console.log(e)}})();
//# sourceMappingURL=index.7a7ea36f.js.map
