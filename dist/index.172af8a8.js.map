{"mappings":"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","sources":["src/js/app-two.js"],"sourcesContent":["const cardContents = document.querySelector('.card__contents');\nconst quoteParagraph = document.querySelector('#quote');\nconst authorParagraph = document.querySelector('#author');\nconst quoteID = document.querySelector('#quoteID');\nconst quoteCount = document.querySelector('#quoteCount');\n\nconst newQuoteBtn = document.querySelector('#newQuoteBtn');\nconst copyBtn = document.querySelector('#copyBtn');\nconst speakBtn = document.querySelector('#speakBtn');\nconst hintContainer = document.querySelector('#hintContainer');\nconst closeBtn = document.querySelector('#closeBtn');\nconst showHintBtn = document.querySelector('#showHintBtn');\nconst copyNotifDiv = document.querySelector('#copyNotifDiv');\n\nconst twitter = document.querySelector('#twitter');\nconst facebook = document.querySelector('#facebook');\n\nconst signature = `#inspirational #quotes #inspirify\\n\\nCopied from Inspirify\\nlink: https://inspirify.netlify.app`;\nconst twitterSignature = `Copied from https://inspirify.netlify.app`;\nconst preventedDefaultsButtons = [twitter, facebook, newQuoteBtn, copyBtn, speakBtn];\nconst disabledButtons = [newQuoteBtn, speakBtn, twitter, facebook];\n\n//******************************* */\n\n//Shortcut keys\nconst invokeShortcuts = (e) => {\n\tswitch (e.code) {\n\t\tcase 'NumpadEnter':\n\t\tcase 'Enter':\n\t\t\tgetRandomQuote();\n\t\t\tbreak;\n\t\tcase 'KeyC':\n\t\t\tcopy();\n\t\t\tbreak;\n\t\tcase 'KeyS':\n\t\t\tspeak();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn 'No shortcut for that key';\n\t}\n};\nwindow.addEventListener('keydown', invokeShortcuts);\n\n//******************************* */\n\n// Global functions\nconst disableButtons = () => {\n\tdisabledButtons.forEach((el) => {\n\t\tel.disabled = true;\n\t});\n};\n\nconst enableButtons = () => {\n\tdisabledButtons.forEach((el) => {\n\t\tel.disabled = false;\n\t});\n};\n\nconst whenFetchingDataFromApi = () => {\n\t// Hanggang hindi pa natin na fefetch ang api\n\t// loading muna ang state ng button\n\t// newQuoteBtn.textContent = '...';\n\tnewQuoteBtn.classList.add('loading-state');\n\tdisableButtons();\n\twindow.removeEventListener('keydown', invokeShortcuts);\n};\n\nconst whenDoneFetchingDataFromApi = () => {\n\tnewQuoteBtn.classList.remove('loading-state');\n\tenableButtons();\n\twindow.addEventListener('keydown', invokeShortcuts);\n};\n\n// Prevent defaults for buttons\npreventedDefaultsButtons.forEach((el) => {\n\tel.addEventListener('mousedown', (e) => {\n\t\te.preventDefault();\n\t\t// I prevented the default, to remove the default focus after clicked\n\t});\n});\n\n//This is for the processing of API and a randomQuote\nconst processRandomQuote = (parsedData) => {\n\t// Based sa structure ng API, Array of objects sya\n\t// so ang nirereturn neto array of objects [{},{}]\n\tconst randomID = Math.floor(Math.random() * parsedData.length);\n\t// Pang testing\n\t// const randomID = 0;\n\tif (parsedData[randomID].author === null) {\n\t\treturn {\n\t\t\tquote: parsedData[randomID].text,\n\t\t\tauthor: `Unknown Author`,\n\t\t\tid: randomID,\n\t\t\tquotesCount: parsedData.length,\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tquote: parsedData[randomID].text,\n\t\t\tauthor: parsedData[randomID].author,\n\t\t\tid: randomID,\n\t\t\tquotesCount: parsedData.length,\n\t\t};\n\t}\n};\n\nconst appendInformation = (parsedData) => {\n\tquoteParagraph.textContent = parsedData.quote;\n\tauthorParagraph.textContent = parsedData.author;\n\tquoteID.textContent = parsedData.id;\n\tquoteCount.textContent = parsedData.quotesCount;\n\n\t// newQuoteBtn.innerHTML =\n\t// '<span class=\"btn__normal__title\">Get new</span><i class=\"fa-solid fa-arrow-rotate-right\"></i>';\n\n\twhenDoneFetchingDataFromApi();\n};\n\nconst onError = (e) => {\n\tconsole.log(e);\n};\n\nconst getRandomQuote = () => {\n\t// Hanggang hindi pa natin na fefetch ang api\n\t// loading muna ang state ng button\n\twhenFetchingDataFromApi();\n\t// ******\n\n\t//Fetching api\n\tconst apiUrl = 'https://type.fit/api/quotes';\n\tfetch(apiUrl)\n\t\t.then((response) => {\n\t\t\treturn response.json();\n\t\t})\n\t\t.then(processRandomQuote)\n\t\t.then(appendInformation)\n\t\t.catch(onError);\n};\n\ngetRandomQuote();\n//******************************* */\n\n// Copy button function\nconst copy = () => {\n\tnavigator.clipboard.writeText(`${quoteParagraph.textContent}\\n\\n--${authorParagraph.textContent}\\n\\n${signature}`);\n\tconsole.log('Clicked copy');\n\n\tcopyNotifDiv.classList.add('show');\n\tsetTimeout(() => {\n\t\tcopyNotifDiv.classList.remove('show');\n\t}, 2000);\n};\n\n// Speak button function\nconst speak = () => {\n\tlet quote = `${quoteParagraph.textContent}`;\n\tlet author = `by ${authorParagraph.textContent}`;\n\tlet utteranceQuote = new SpeechSynthesisUtterance(quote);\n\tlet utteranceAuthor = new SpeechSynthesisUtterance(author);\n\tutteranceQuote.pitch = 1;\n\tutteranceQuote.rate = 0.8;\n\tutteranceAuthor.pitch = 1;\n\tutteranceAuthor.rate = 0.8;\n\n\tspeakBtn.classList.add('active');\n\tdisableButtons();\n\twindow.removeEventListener('keydown', invokeShortcuts);\n\n\tspeechSynthesis.speak(utteranceQuote);\n\tutteranceQuote.addEventListener('end', () => {\n\t\tsetTimeout(() => {\n\t\t\tspeechSynthesis.speak(utteranceAuthor);\n\t\t\tspeakBtn.classList.remove('active');\n\t\t\tenableButtons();\n\t\t\twindow.addEventListener('keydown', invokeShortcuts);\n\t\t}, 500);\n\t});\n};\n\n//******************************* */\n\n// Button event listeners\ncopyBtn.addEventListener('click', copy);\nspeakBtn.addEventListener('click', speak);\nnewQuoteBtn.addEventListener('click', getRandomQuote);\n\ntwitter.addEventListener('click', () => {\n\tlet url = `https://twitter.com/intent/tweet?url=${quoteParagraph.textContent}\\n\\n--${authorParagraph.textContent}\\n\\n${twitterSignature}`;\n\tlet encodedUrl = encodeURI(url);\n\twindow.open(encodedUrl, '_blank');\n});\nfacebook.addEventListener('click', () => {\n\tlet url = `https://facebook.com/profile`;\n\twindow.open(url, '_blank');\n});\n\n//******************************* */\n//******************************* */\n//******************************* */\n\n// FOR SHORCUT HINTS\nshowHintBtn.addEventListener('click', () => {\n\thintContainer.classList.add('show');\n\tshowHintBtn.classList.remove('show');\n});\n\nconst showHintPromise = () => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (window.innerWidth >= 320) {\n\t\t\tsetTimeout(() => {\n\t\t\t\thintContainer.classList.add('show');\n\t\t\t\tresolve();\n\t\t\t}, 2000);\n\t\t} else {\n\t\t\treject('The current screen size is less than 320px');\n\t\t}\n\t});\n};\n\nconst showHint = async () => {\n\ttry {\n\t\tawait showHintPromise();\n\t\tcloseBtn.addEventListener('click', () => {\n\t\t\thintContainer.classList.remove('show');\n\t\t\tshowHintBtn.classList.add('show');\n\t\t});\n\t} catch (e) {\n\t\tconsole.log(e);\n\t}\n};\n\nshowHint();\n"],"names":["document","querySelector","$7c42aca4e93d903e$var$quoteParagraph","$7c42aca4e93d903e$var$authorParagraph","$7c42aca4e93d903e$var$quoteID","$7c42aca4e93d903e$var$quoteCount","$7c42aca4e93d903e$var$newQuoteBtn","$7c42aca4e93d903e$var$copyBtn","$7c42aca4e93d903e$var$speakBtn","$7c42aca4e93d903e$var$hintContainer","$7c42aca4e93d903e$var$closeBtn","$7c42aca4e93d903e$var$showHintBtn","$7c42aca4e93d903e$var$copyNotifDiv","$7c42aca4e93d903e$var$twitter","$7c42aca4e93d903e$var$facebook","$7c42aca4e93d903e$var$preventedDefaultsButtons","$7c42aca4e93d903e$var$disabledButtons","$7c42aca4e93d903e$var$invokeShortcuts","e","code","$7c42aca4e93d903e$var$getRandomQuote","$7c42aca4e93d903e$var$copy","$7c42aca4e93d903e$var$speak","window","addEventListener","$7c42aca4e93d903e$var$disableButtons","forEach","el","disabled","$7c42aca4e93d903e$var$enableButtons","preventDefault","$7c42aca4e93d903e$var$processRandomQuote","parsedData","randomID","Math","floor","random","length","author","quote","text","id","quotesCount","$7c42aca4e93d903e$var$appendInformation","textContent","classList","remove","$7c42aca4e93d903e$var$onError","console","log","add","removeEventListener","fetch","then","response","json","catch","navigator","clipboard","writeText","setTimeout","utteranceQuote","SpeechSynthesisUtterance","utteranceAuthor","pitch","rate","speechSynthesis","speak","url","encodedUrl","encodeURI","open","async","Promise","resolve","reject","innerWidth","$7c42aca4e93d903e$var$showHint"],"version":3,"file":"index.172af8a8.js.map"}